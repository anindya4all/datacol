// Code generated by protoc-gen-go.
// source: services.proto
// DO NOT EDIT!

/*
Package controller is a generated protocol buffer package.

It is generated from these files:
	services.proto

It has these top-level messages:
	ListRequest
	AppRequest
	AppListResponse
	AuthRequest
	AuthResponse
	CreateBuildRequest
	AppIdRequest
	BuildLogRequest
	BuildLogResponse
	EnvSetRequest
	ResourceListResponse
	BuildListResponse
	CreateResourceRequest
	AppResourceReq
	KubectlReq
	CmdResponse
	LogStreamReq
	LogStreamResponse
	ProcessRunReq
	ReleaseListResponse
*/
package controller

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/duration"
import _ "github.com/gogo/protobuf/gogoproto"
import models "github.com/dinesh/datacol/api/models"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequest struct {
	Offset int32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ListRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type AppRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *AppRequest) Reset()                    { *m = AppRequest{} }
func (m *AppRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRequest) ProtoMessage()               {}
func (*AppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AppListResponse struct {
	Apps   []*models.App `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	Limit  int32         `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset int32         `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *AppListResponse) Reset()                    { *m = AppListResponse{} }
func (m *AppListResponse) String() string            { return proto.CompactTextString(m) }
func (*AppListResponse) ProtoMessage()               {}
func (*AppListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AppListResponse) GetApps() []*models.App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *AppListResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AppListResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type AuthRequest struct {
	Password string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
}

func (m *AuthRequest) Reset()                    { *m = AuthRequest{} }
func (m *AuthRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()               {}
func (*AuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthResponse struct {
	Host    string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Project string `protobuf:"bytes,3,opt,name=project" json:"project,omitempty"`
}

func (m *AuthResponse) Reset()                    { *m = AuthResponse{} }
func (m *AuthResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()               {}
func (*AuthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AuthResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *AuthResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthResponse) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type CreateBuildRequest struct {
	App  string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CreateBuildRequest) Reset()                    { *m = CreateBuildRequest{} }
func (m *CreateBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBuildRequest) ProtoMessage()               {}
func (*CreateBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateBuildRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *CreateBuildRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AppIdRequest struct {
	App string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Id  string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *AppIdRequest) Reset()                    { *m = AppIdRequest{} }
func (m *AppIdRequest) String() string            { return proto.CompactTextString(m) }
func (*AppIdRequest) ProtoMessage()               {}
func (*AppIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AppIdRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *AppIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BuildLogRequest struct {
	App string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Id  string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Pos int32  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
}

func (m *BuildLogRequest) Reset()                    { *m = BuildLogRequest{} }
func (m *BuildLogRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildLogRequest) ProtoMessage()               {}
func (*BuildLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BuildLogRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *BuildLogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BuildLogRequest) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

type BuildLogResponse struct {
	Pos   int32    `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Lines []string `protobuf:"bytes,2,rep,name=lines" json:"lines,omitempty"`
}

func (m *BuildLogResponse) Reset()                    { *m = BuildLogResponse{} }
func (m *BuildLogResponse) String() string            { return proto.CompactTextString(m) }
func (*BuildLogResponse) ProtoMessage()               {}
func (*BuildLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BuildLogResponse) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BuildLogResponse) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

type EnvSetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *EnvSetRequest) Reset()                    { *m = EnvSetRequest{} }
func (m *EnvSetRequest) String() string            { return proto.CompactTextString(m) }
func (*EnvSetRequest) ProtoMessage()               {}
func (*EnvSetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *EnvSetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvSetRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ResourceListResponse struct {
	Resources []*models.Resource `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
}

func (m *ResourceListResponse) Reset()                    { *m = ResourceListResponse{} }
func (m *ResourceListResponse) String() string            { return proto.CompactTextString(m) }
func (*ResourceListResponse) ProtoMessage()               {}
func (*ResourceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ResourceListResponse) GetResources() []*models.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type BuildListResponse struct {
	Builds []*models.Build `protobuf:"bytes,1,rep,name=builds" json:"builds,omitempty"`
}

func (m *BuildListResponse) Reset()                    { *m = BuildListResponse{} }
func (m *BuildListResponse) String() string            { return proto.CompactTextString(m) }
func (*BuildListResponse) ProtoMessage()               {}
func (*BuildListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BuildListResponse) GetBuilds() []*models.Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type CreateResourceRequest struct {
	Name   string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Kind   string            `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Params map[string]string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CreateResourceRequest) Reset()                    { *m = CreateResourceRequest{} }
func (m *CreateResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateResourceRequest) ProtoMessage()               {}
func (*CreateResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CreateResourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateResourceRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateResourceRequest) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type AppResourceReq struct {
	App  string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *AppResourceReq) Reset()                    { *m = AppResourceReq{} }
func (m *AppResourceReq) String() string            { return proto.CompactTextString(m) }
func (*AppResourceReq) ProtoMessage()               {}
func (*AppResourceReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AppResourceReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *AppResourceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type KubectlReq struct {
	Args []string `protobuf:"bytes,1,rep,name=args" json:"args,omitempty"`
}

func (m *KubectlReq) Reset()                    { *m = KubectlReq{} }
func (m *KubectlReq) String() string            { return proto.CompactTextString(m) }
func (*KubectlReq) ProtoMessage()               {}
func (*KubectlReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *KubectlReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type CmdResponse struct {
	ExitCode int32  `protobuf:"varint,1,opt,name=exit_code,json=exitCode" json:"exit_code,omitempty"`
	Err      string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	StdOut   string `protobuf:"bytes,3,opt,name=stdOut" json:"stdOut,omitempty"`
	StdErr   string `protobuf:"bytes,4,opt,name=stdErr" json:"stdErr,omitempty"`
}

func (m *CmdResponse) Reset()                    { *m = CmdResponse{} }
func (m *CmdResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdResponse) ProtoMessage()               {}
func (*CmdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CmdResponse) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *CmdResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *CmdResponse) GetStdOut() string {
	if m != nil {
		return m.StdOut
	}
	return ""
}

func (m *CmdResponse) GetStdErr() string {
	if m != nil {
		return m.StdErr
	}
	return ""
}

type LogStreamReq struct {
	Name   string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Follow bool                       `protobuf:"varint,2,opt,name=follow" json:"follow,omitempty"`
	Since  *google_protobuf2.Duration `protobuf:"bytes,3,opt,name=since" json:"since,omitempty"`
}

func (m *LogStreamReq) Reset()                    { *m = LogStreamReq{} }
func (m *LogStreamReq) String() string            { return proto.CompactTextString(m) }
func (*LogStreamReq) ProtoMessage()               {}
func (*LogStreamReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *LogStreamReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogStreamReq) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *LogStreamReq) GetSince() *google_protobuf2.Duration {
	if m != nil {
		return m.Since
	}
	return nil
}

type LogStreamResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *LogStreamResponse) Reset()                    { *m = LogStreamResponse{} }
func (m *LogStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*LogStreamResponse) ProtoMessage()               {}
func (*LogStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *LogStreamResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProcessRunReq struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Command []string `protobuf:"bytes,2,rep,name=command" json:"command,omitempty"`
}

func (m *ProcessRunReq) Reset()                    { *m = ProcessRunReq{} }
func (m *ProcessRunReq) String() string            { return proto.CompactTextString(m) }
func (*ProcessRunReq) ProtoMessage()               {}
func (*ProcessRunReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ProcessRunReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProcessRunReq) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

type ReleaseListResponse struct {
	Releases []*models.Release `protobuf:"bytes,1,rep,name=releases" json:"releases,omitempty"`
}

func (m *ReleaseListResponse) Reset()                    { *m = ReleaseListResponse{} }
func (m *ReleaseListResponse) String() string            { return proto.CompactTextString(m) }
func (*ReleaseListResponse) ProtoMessage()               {}
func (*ReleaseListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ReleaseListResponse) GetReleases() []*models.Release {
	if m != nil {
		return m.Releases
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "controller.ListRequest")
	proto.RegisterType((*AppRequest)(nil), "controller.AppRequest")
	proto.RegisterType((*AppListResponse)(nil), "controller.AppListResponse")
	proto.RegisterType((*AuthRequest)(nil), "controller.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "controller.AuthResponse")
	proto.RegisterType((*CreateBuildRequest)(nil), "controller.CreateBuildRequest")
	proto.RegisterType((*AppIdRequest)(nil), "controller.AppIdRequest")
	proto.RegisterType((*BuildLogRequest)(nil), "controller.BuildLogRequest")
	proto.RegisterType((*BuildLogResponse)(nil), "controller.BuildLogResponse")
	proto.RegisterType((*EnvSetRequest)(nil), "controller.EnvSetRequest")
	proto.RegisterType((*ResourceListResponse)(nil), "controller.ResourceListResponse")
	proto.RegisterType((*BuildListResponse)(nil), "controller.BuildListResponse")
	proto.RegisterType((*CreateResourceRequest)(nil), "controller.CreateResourceRequest")
	proto.RegisterType((*AppResourceReq)(nil), "controller.AppResourceReq")
	proto.RegisterType((*KubectlReq)(nil), "controller.KubectlReq")
	proto.RegisterType((*CmdResponse)(nil), "controller.CmdResponse")
	proto.RegisterType((*LogStreamReq)(nil), "controller.LogStreamReq")
	proto.RegisterType((*LogStreamResponse)(nil), "controller.LogStreamResponse")
	proto.RegisterType((*ProcessRunReq)(nil), "controller.ProcessRunReq")
	proto.RegisterType((*ReleaseListResponse)(nil), "controller.ReleaseListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProviderService service

type ProviderServiceClient interface {
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	// Account api
	AppList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*AppListResponse, error)
	AppCreate(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.App, error)
	AppGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.App, error)
	AppRestart(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	AppDelete(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Build Api
	BuildCreate(ctx context.Context, opts ...grpc.CallOption) (ProviderService_BuildCreateClient, error)
	BuildRelease(ctx context.Context, in *models.Build, opts ...grpc.CallOption) (*models.Release, error)
	BuildGet(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*models.Build, error)
	BuildDelete(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	BuildList(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*BuildListResponse, error)
	BuildLogs(ctx context.Context, in *BuildLogRequest, opts ...grpc.CallOption) (*BuildLogResponse, error)
	EnvironmentGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.EnvConfig, error)
	EnvironmentSet(ctx context.Context, in *EnvSetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Release endpoints
	ReleaseList(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*ReleaseListResponse, error)
	ReleaseDelete(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Resource endpoints
	ResourceList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ResourceListResponse, error)
	ResourceGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.Resource, error)
	ResourceCreate(ctx context.Context, in *CreateResourceRequest, opts ...grpc.CallOption) (*models.Resource, error)
	ResourceDelete(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ResourceLink(ctx context.Context, in *AppResourceReq, opts ...grpc.CallOption) (*models.Resource, error)
	ResourceUnlink(ctx context.Context, in *AppResourceReq, opts ...grpc.CallOption) (*models.Resource, error)
	// kubectl api wrappers
	Kubectl(ctx context.Context, in *KubectlReq, opts ...grpc.CallOption) (*CmdResponse, error)
	// Process api
	ProcessRun(ctx context.Context, in *ProcessRunReq, opts ...grpc.CallOption) (*CmdResponse, error)
	LogStream(ctx context.Context, in *LogStreamReq, opts ...grpc.CallOption) (ProviderService_LogStreamClient, error)
}

type providerServiceClient struct {
	cc *grpc.ClientConn
}

func NewProviderServiceClient(cc *grpc.ClientConn) ProviderServiceClient {
	return &providerServiceClient{cc}
}

func (c *providerServiceClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/Auth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) AppList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*AppListResponse, error) {
	out := new(AppListResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/AppList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) AppCreate(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.App, error) {
	out := new(models.App)
	err := grpc.Invoke(ctx, "/controller.ProviderService/AppCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) AppGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.App, error) {
	out := new(models.App)
	err := grpc.Invoke(ctx, "/controller.ProviderService/AppGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) AppRestart(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/AppRestart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) AppDelete(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/AppDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) BuildCreate(ctx context.Context, opts ...grpc.CallOption) (ProviderService_BuildCreateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProviderService_serviceDesc.Streams[0], c.cc, "/controller.ProviderService/BuildCreate", opts...)
	if err != nil {
		return nil, err
	}
	x := &providerServiceBuildCreateClient{stream}
	return x, nil
}

type ProviderService_BuildCreateClient interface {
	Send(*CreateBuildRequest) error
	CloseAndRecv() (*models.Build, error)
	grpc.ClientStream
}

type providerServiceBuildCreateClient struct {
	grpc.ClientStream
}

func (x *providerServiceBuildCreateClient) Send(m *CreateBuildRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *providerServiceBuildCreateClient) CloseAndRecv() (*models.Build, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(models.Build)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *providerServiceClient) BuildRelease(ctx context.Context, in *models.Build, opts ...grpc.CallOption) (*models.Release, error) {
	out := new(models.Release)
	err := grpc.Invoke(ctx, "/controller.ProviderService/BuildRelease", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) BuildGet(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*models.Build, error) {
	out := new(models.Build)
	err := grpc.Invoke(ctx, "/controller.ProviderService/BuildGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) BuildDelete(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/BuildDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) BuildList(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*BuildListResponse, error) {
	out := new(BuildListResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/BuildList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) BuildLogs(ctx context.Context, in *BuildLogRequest, opts ...grpc.CallOption) (*BuildLogResponse, error) {
	out := new(BuildLogResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/BuildLogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) EnvironmentGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.EnvConfig, error) {
	out := new(models.EnvConfig)
	err := grpc.Invoke(ctx, "/controller.ProviderService/EnvironmentGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) EnvironmentSet(ctx context.Context, in *EnvSetRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/EnvironmentSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ReleaseList(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*ReleaseListResponse, error) {
	out := new(ReleaseListResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ReleaseList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ReleaseDelete(ctx context.Context, in *AppIdRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ReleaseDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ResourceListResponse, error) {
	out := new(ResourceListResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceGet(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*models.Resource, error) {
	out := new(models.Resource)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceCreate(ctx context.Context, in *CreateResourceRequest, opts ...grpc.CallOption) (*models.Resource, error) {
	out := new(models.Resource)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceDelete(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceLink(ctx context.Context, in *AppResourceReq, opts ...grpc.CallOption) (*models.Resource, error) {
	out := new(models.Resource)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceLink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ResourceUnlink(ctx context.Context, in *AppResourceReq, opts ...grpc.CallOption) (*models.Resource, error) {
	out := new(models.Resource)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ResourceUnlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) Kubectl(ctx context.Context, in *KubectlReq, opts ...grpc.CallOption) (*CmdResponse, error) {
	out := new(CmdResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/Kubectl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) ProcessRun(ctx context.Context, in *ProcessRunReq, opts ...grpc.CallOption) (*CmdResponse, error) {
	out := new(CmdResponse)
	err := grpc.Invoke(ctx, "/controller.ProviderService/ProcessRun", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) LogStream(ctx context.Context, in *LogStreamReq, opts ...grpc.CallOption) (ProviderService_LogStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProviderService_serviceDesc.Streams[1], c.cc, "/controller.ProviderService/LogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &providerServiceLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProviderService_LogStreamClient interface {
	Recv() (*LogStreamResponse, error)
	grpc.ClientStream
}

type providerServiceLogStreamClient struct {
	grpc.ClientStream
}

func (x *providerServiceLogStreamClient) Recv() (*LogStreamResponse, error) {
	m := new(LogStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ProviderService service

type ProviderServiceServer interface {
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	// Account api
	AppList(context.Context, *ListRequest) (*AppListResponse, error)
	AppCreate(context.Context, *AppRequest) (*models.App, error)
	AppGet(context.Context, *AppRequest) (*models.App, error)
	AppRestart(context.Context, *AppRequest) (*google_protobuf1.Empty, error)
	AppDelete(context.Context, *AppRequest) (*google_protobuf1.Empty, error)
	// Build Api
	BuildCreate(ProviderService_BuildCreateServer) error
	BuildRelease(context.Context, *models.Build) (*models.Release, error)
	BuildGet(context.Context, *AppIdRequest) (*models.Build, error)
	BuildDelete(context.Context, *AppIdRequest) (*google_protobuf1.Empty, error)
	BuildList(context.Context, *AppRequest) (*BuildListResponse, error)
	BuildLogs(context.Context, *BuildLogRequest) (*BuildLogResponse, error)
	EnvironmentGet(context.Context, *AppRequest) (*models.EnvConfig, error)
	EnvironmentSet(context.Context, *EnvSetRequest) (*google_protobuf1.Empty, error)
	// Release endpoints
	ReleaseList(context.Context, *AppRequest) (*ReleaseListResponse, error)
	ReleaseDelete(context.Context, *AppIdRequest) (*google_protobuf1.Empty, error)
	// Resource endpoints
	ResourceList(context.Context, *ListRequest) (*ResourceListResponse, error)
	ResourceGet(context.Context, *AppRequest) (*models.Resource, error)
	ResourceCreate(context.Context, *CreateResourceRequest) (*models.Resource, error)
	ResourceDelete(context.Context, *AppRequest) (*google_protobuf1.Empty, error)
	ResourceLink(context.Context, *AppResourceReq) (*models.Resource, error)
	ResourceUnlink(context.Context, *AppResourceReq) (*models.Resource, error)
	// kubectl api wrappers
	Kubectl(context.Context, *KubectlReq) (*CmdResponse, error)
	// Process api
	ProcessRun(context.Context, *ProcessRunReq) (*CmdResponse, error)
	LogStream(*LogStreamReq, ProviderService_LogStreamServer) error
}

func RegisterProviderServiceServer(s *grpc.Server, srv ProviderServiceServer) {
	s.RegisterService(&_ProviderService_serviceDesc, srv)
}

func _ProviderService_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_AppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).AppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/AppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).AppList(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_AppCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).AppCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/AppCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).AppCreate(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_AppGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).AppGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/AppGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).AppGet(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_AppRestart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).AppRestart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/AppRestart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).AppRestart(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_AppDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).AppDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/AppDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).AppDelete(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_BuildCreate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProviderServiceServer).BuildCreate(&providerServiceBuildCreateServer{stream})
}

type ProviderService_BuildCreateServer interface {
	SendAndClose(*models.Build) error
	Recv() (*CreateBuildRequest, error)
	grpc.ServerStream
}

type providerServiceBuildCreateServer struct {
	grpc.ServerStream
}

func (x *providerServiceBuildCreateServer) SendAndClose(m *models.Build) error {
	return x.ServerStream.SendMsg(m)
}

func (x *providerServiceBuildCreateServer) Recv() (*CreateBuildRequest, error) {
	m := new(CreateBuildRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProviderService_BuildRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.Build)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).BuildRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/BuildRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).BuildRelease(ctx, req.(*models.Build))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_BuildGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).BuildGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/BuildGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).BuildGet(ctx, req.(*AppIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_BuildDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).BuildDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/BuildDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).BuildDelete(ctx, req.(*AppIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_BuildList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).BuildList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/BuildList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).BuildList(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_BuildLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).BuildLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/BuildLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).BuildLogs(ctx, req.(*BuildLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_EnvironmentGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).EnvironmentGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/EnvironmentGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).EnvironmentGet(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_EnvironmentSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnvSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).EnvironmentSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/EnvironmentSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).EnvironmentSet(ctx, req.(*EnvSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ReleaseList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ReleaseList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ReleaseList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ReleaseList(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ReleaseDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ReleaseDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ReleaseDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ReleaseDelete(ctx, req.(*AppIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceList(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceGet(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceCreate(ctx, req.(*CreateResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceDelete(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppResourceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceLink(ctx, req.(*AppResourceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ResourceUnlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppResourceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ResourceUnlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ResourceUnlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ResourceUnlink(ctx, req.(*AppResourceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_Kubectl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubectlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).Kubectl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/Kubectl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).Kubectl(ctx, req.(*KubectlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_ProcessRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessRunReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).ProcessRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ProviderService/ProcessRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).ProcessRun(ctx, req.(*ProcessRunReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_LogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogStreamReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProviderServiceServer).LogStream(m, &providerServiceLogStreamServer{stream})
}

type ProviderService_LogStreamServer interface {
	Send(*LogStreamResponse) error
	grpc.ServerStream
}

type providerServiceLogStreamServer struct {
	grpc.ServerStream
}

func (x *providerServiceLogStreamServer) Send(m *LogStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.ProviderService",
	HandlerType: (*ProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _ProviderService_Auth_Handler,
		},
		{
			MethodName: "AppList",
			Handler:    _ProviderService_AppList_Handler,
		},
		{
			MethodName: "AppCreate",
			Handler:    _ProviderService_AppCreate_Handler,
		},
		{
			MethodName: "AppGet",
			Handler:    _ProviderService_AppGet_Handler,
		},
		{
			MethodName: "AppRestart",
			Handler:    _ProviderService_AppRestart_Handler,
		},
		{
			MethodName: "AppDelete",
			Handler:    _ProviderService_AppDelete_Handler,
		},
		{
			MethodName: "BuildRelease",
			Handler:    _ProviderService_BuildRelease_Handler,
		},
		{
			MethodName: "BuildGet",
			Handler:    _ProviderService_BuildGet_Handler,
		},
		{
			MethodName: "BuildDelete",
			Handler:    _ProviderService_BuildDelete_Handler,
		},
		{
			MethodName: "BuildList",
			Handler:    _ProviderService_BuildList_Handler,
		},
		{
			MethodName: "BuildLogs",
			Handler:    _ProviderService_BuildLogs_Handler,
		},
		{
			MethodName: "EnvironmentGet",
			Handler:    _ProviderService_EnvironmentGet_Handler,
		},
		{
			MethodName: "EnvironmentSet",
			Handler:    _ProviderService_EnvironmentSet_Handler,
		},
		{
			MethodName: "ReleaseList",
			Handler:    _ProviderService_ReleaseList_Handler,
		},
		{
			MethodName: "ReleaseDelete",
			Handler:    _ProviderService_ReleaseDelete_Handler,
		},
		{
			MethodName: "ResourceList",
			Handler:    _ProviderService_ResourceList_Handler,
		},
		{
			MethodName: "ResourceGet",
			Handler:    _ProviderService_ResourceGet_Handler,
		},
		{
			MethodName: "ResourceCreate",
			Handler:    _ProviderService_ResourceCreate_Handler,
		},
		{
			MethodName: "ResourceDelete",
			Handler:    _ProviderService_ResourceDelete_Handler,
		},
		{
			MethodName: "ResourceLink",
			Handler:    _ProviderService_ResourceLink_Handler,
		},
		{
			MethodName: "ResourceUnlink",
			Handler:    _ProviderService_ResourceUnlink_Handler,
		},
		{
			MethodName: "Kubectl",
			Handler:    _ProviderService_Kubectl_Handler,
		},
		{
			MethodName: "ProcessRun",
			Handler:    _ProviderService_ProcessRun_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BuildCreate",
			Handler:       _ProviderService_BuildCreate_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LogStream",
			Handler:       _ProviderService_LogStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "services.proto",
}

func init() { proto.RegisterFile("services.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x5d, 0x6f, 0x1b, 0x45,
	0x17, 0x7e, 0xed, 0xb8, 0x49, 0x7c, 0xec, 0x38, 0xc9, 0x24, 0x75, 0x1c, 0xa7, 0x6f, 0x92, 0xce,
	0xab, 0x57, 0x4d, 0x83, 0xea, 0x2d, 0x45, 0xe2, 0x23, 0x88, 0x0b, 0x27, 0x75, 0x51, 0x45, 0x44,
	0xc3, 0x86, 0x4a, 0x08, 0x28, 0xed, 0xc6, 0x3b, 0x71, 0x16, 0xaf, 0x77, 0x86, 0xd9, 0x59, 0x97,
	0xa8, 0xea, 0x0d, 0x7f, 0x81, 0x5f, 0xc4, 0x5d, 0x2f, 0x91, 0xb8, 0xe0, 0x0e, 0xa1, 0x8a, 0x1f,
	0x82, 0xe6, 0x6b, 0xbd, 0xeb, 0x8f, 0x50, 0x7a, 0x37, 0x67, 0xf6, 0x9c, 0xe7, 0x3c, 0x73, 0xce,
	0x99, 0x33, 0x67, 0xa1, 0x16, 0x13, 0x3e, 0x0c, 0xba, 0x24, 0x6e, 0x31, 0x4e, 0x05, 0x45, 0xd0,
	0xa5, 0x91, 0xe0, 0x34, 0x0c, 0x09, 0x6f, 0xde, 0xe8, 0x51, 0xda, 0x0b, 0x89, 0xe3, 0xb1, 0xc0,
	0xf1, 0xa2, 0x88, 0x0a, 0x4f, 0x04, 0x34, 0x32, 0x9a, 0xcd, 0x2d, 0xf3, 0x55, 0x49, 0x67, 0xc9,
	0xb9, 0x43, 0x06, 0x4c, 0x5c, 0x9a, 0x8f, 0xdb, 0xe3, 0x1f, 0xfd, 0x84, 0x2b, 0x6b, 0xf3, 0xfd,
	0x4e, 0x2f, 0x10, 0x17, 0xc9, 0x59, 0xab, 0x4b, 0x07, 0x4e, 0x8f, 0xf6, 0xe8, 0x48, 0x51, 0x4a,
	0x4a, 0x50, 0x2b, 0xa3, 0x7e, 0x37, 0xa3, 0xee, 0x07, 0x11, 0x89, 0x2f, 0x1c, 0xdf, 0x13, 0x5e,
	0x97, 0x86, 0x8a, 0xdc, 0x80, 0xfa, 0x24, 0x8c, 0x1d, 0x71, 0xc9, 0xec, 0x39, 0xf0, 0xc7, 0x50,
	0x39, 0x0e, 0x62, 0xe1, 0x92, 0x1f, 0x12, 0x12, 0x0b, 0x54, 0x87, 0x79, 0x7a, 0x7e, 0x1e, 0x13,
	0xd1, 0x28, 0xec, 0x16, 0xf6, 0xae, 0xb9, 0x46, 0x42, 0xeb, 0x70, 0x2d, 0x0c, 0x06, 0x81, 0x68,
	0x14, 0xd5, 0xb6, 0x16, 0xf0, 0x2e, 0x40, 0x9b, 0x31, 0x6b, 0x8b, 0xa0, 0x14, 0x79, 0x03, 0xa2,
	0x2c, 0xcb, 0xae, 0x5a, 0xe3, 0x73, 0x58, 0x6e, 0x33, 0xa6, 0x3d, 0xc4, 0x8c, 0x46, 0x31, 0x41,
	0xff, 0x87, 0x92, 0xc7, 0x58, 0xdc, 0x28, 0xec, 0xce, 0xed, 0x55, 0xee, 0x55, 0x5a, 0x9a, 0x54,
	0xab, 0xcd, 0xd8, 0x61, 0xe9, 0xd5, 0x1f, 0x3b, 0xff, 0x71, 0xd5, 0xe7, 0xe9, 0x1e, 0x33, 0xfc,
	0xe6, 0xb2, 0xfc, 0xf0, 0x6d, 0xa8, 0xb4, 0x13, 0x71, 0x61, 0xa9, 0x34, 0x61, 0x91, 0x79, 0x71,
	0xfc, 0x9c, 0x72, 0xdf, 0xd0, 0x49, 0x65, 0x7c, 0x02, 0x55, 0xad, 0x6a, 0xf8, 0x20, 0x28, 0x5d,
	0xd0, 0x58, 0x58, 0xda, 0x72, 0x9d, 0x1e, 0xa5, 0x38, 0x3a, 0x0a, 0x6a, 0xc0, 0x02, 0xe3, 0xf4,
	0x7b, 0xd2, 0xd5, 0xbe, 0xcb, 0xae, 0x15, 0xf1, 0x01, 0xa0, 0x23, 0x4e, 0x3c, 0x41, 0x0e, 0x93,
	0x20, 0xf4, 0x2d, 0x87, 0x15, 0x98, 0xf3, 0x18, 0x33, 0xb0, 0x72, 0x29, 0x51, 0x65, 0x36, 0x14,
	0x6a, 0xd5, 0x55, 0x6b, 0x7c, 0x17, 0xaa, 0x6d, 0xc6, 0x1e, 0x5e, 0x61, 0x55, 0x83, 0x62, 0xe0,
	0x1b, 0x26, 0xc5, 0xc0, 0xc7, 0x1d, 0x58, 0x56, 0x7e, 0x8e, 0x69, 0xef, 0x8d, 0x8d, 0xa4, 0x06,
	0xa3, 0xb1, 0x09, 0x9a, 0x5c, 0xe2, 0x03, 0x58, 0x19, 0xc1, 0x98, 0x50, 0x18, 0xad, 0x42, 0xaa,
	0xa5, 0xb3, 0x10, 0x91, 0xb8, 0x51, 0xdc, 0x9d, 0xdb, 0x2b, 0xbb, 0x5a, 0xc0, 0x1f, 0xc0, 0x52,
	0x27, 0x1a, 0x9e, 0x12, 0x71, 0x45, 0xea, 0x73, 0xa7, 0x2d, 0x9b, 0xd3, 0x3e, 0x80, 0x75, 0x97,
	0xc4, 0x34, 0xe1, 0x5d, 0x92, 0xab, 0x89, 0x16, 0x94, 0xb9, 0xd9, 0xb7, 0x85, 0xb1, 0x62, 0x0b,
	0xc3, 0x1a, 0xb8, 0x23, 0x15, 0x7c, 0x00, 0xab, 0x9a, 0x7c, 0xbe, 0xb0, 0xe6, 0xcf, 0xe4, 0xa6,
	0x45, 0x58, 0xb2, 0x08, 0x3a, 0x2d, 0xe6, 0x23, 0xfe, 0xa5, 0x00, 0xd7, 0x75, 0xba, 0x52, 0xe4,
	0xab, 0x4f, 0xd1, 0x0f, 0x22, 0x1b, 0x4a, 0xb5, 0x46, 0x1d, 0x98, 0x67, 0x1e, 0xf7, 0x06, 0x32,
	0x9e, 0xd2, 0xd1, 0x9d, 0xd6, 0xa8, 0x19, 0xb4, 0xa6, 0x42, 0xb7, 0x4e, 0x94, 0x7e, 0x27, 0x12,
	0xfc, 0xd2, 0x35, 0xc6, 0xcd, 0x8f, 0xa0, 0x92, 0xd9, 0x96, 0xc1, 0xef, 0x93, 0x4b, 0x9b, 0xc4,
	0x3e, 0xb9, 0x94, 0xc1, 0x1f, 0x7a, 0x61, 0x62, 0xcb, 0x50, 0x0b, 0x07, 0xc5, 0x0f, 0x0b, 0xf8,
	0x7d, 0xa8, 0xa9, 0x8b, 0x97, 0x3a, 0x99, 0x5e, 0x6d, 0xe3, 0x35, 0x2c, 0x2f, 0xec, 0x67, 0xc9,
	0x19, 0xe9, 0x8a, 0x50, 0xda, 0x20, 0x28, 0x79, 0xbc, 0xa7, 0xc3, 0x55, 0x76, 0xd5, 0x1a, 0x87,
	0x50, 0x39, 0x1a, 0xf8, 0x69, 0x4c, 0xb7, 0xa0, 0x4c, 0x7e, 0x0c, 0xc4, 0xd3, 0x2e, 0xf5, 0x89,
	0xa9, 0x8b, 0x45, 0xb9, 0x71, 0x44, 0x7d, 0x55, 0x2e, 0x84, 0x73, 0xe3, 0x40, 0x2e, 0xe5, 0xf5,
	0x8c, 0x85, 0xff, 0x28, 0xb1, 0x57, 0xc4, 0x48, 0x66, 0xbf, 0xc3, 0x79, 0xa3, 0x94, 0xee, 0x77,
	0x38, 0xc7, 0x7d, 0xa8, 0x1e, 0xd3, 0xde, 0xa9, 0xe0, 0xc4, 0x1b, 0x18, 0x46, 0x13, 0x19, 0xa8,
	0xc3, 0xfc, 0x39, 0x0d, 0x43, 0xfa, 0x5c, 0x39, 0x5a, 0x74, 0x8d, 0x84, 0x1c, 0xb8, 0x16, 0x07,
	0x51, 0x97, 0x28, 0x57, 0x95, 0x7b, 0x9b, 0x2d, 0xdd, 0x4a, 0x5b, 0xb6, 0x43, 0xb6, 0xee, 0x9b,
	0x56, 0xea, 0x6a, 0x3d, 0x7c, 0x0b, 0x56, 0x33, 0xce, 0x46, 0xb7, 0x5f, 0x55, 0x69, 0x21, 0x73,
	0x27, 0x3f, 0x81, 0xa5, 0x13, 0x4e, 0xbb, 0x24, 0x8e, 0xdd, 0x24, 0x9a, 0x45, 0xab, 0x01, 0x0b,
	0x5d, 0x3a, 0x18, 0x78, 0xaa, 0x36, 0x64, 0xfc, 0xac, 0x88, 0x0f, 0x61, 0xcd, 0x25, 0x21, 0xf1,
	0xe2, 0x7c, 0x8d, 0xbf, 0x03, 0x8b, 0x5c, 0x6f, 0xdb, 0x02, 0x5d, 0x1e, 0x95, 0xb8, 0xda, 0x77,
	0x53, 0x85, 0x7b, 0xbf, 0xaf, 0xc2, 0xf2, 0x09, 0xa7, 0xc3, 0xc0, 0x27, 0xfc, 0x54, 0xbf, 0x3c,
	0xe8, 0x73, 0x28, 0xc9, 0xc6, 0x85, 0x36, 0xb2, 0xe5, 0x96, 0xe9, 0x7a, 0xcd, 0xc6, 0xe4, 0x07,
	0xed, 0x1b, 0xaf, 0xfd, 0xf4, 0xdb, 0x5f, 0x3f, 0x17, 0x97, 0xf0, 0xa2, 0x33, 0x7c, 0xd7, 0xf1,
	0x12, 0x71, 0x71, 0x50, 0xd8, 0x47, 0x5f, 0xc0, 0x82, 0xe9, 0xcd, 0x79, 0xc8, 0xcc, 0x7b, 0xd0,
	0xdc, 0xca, 0x41, 0xe6, 0x3b, 0x39, 0x5e, 0x51, 0xa8, 0x80, 0x34, 0xaa, 0x6c, 0xda, 0x1d, 0x28,
	0xb7, 0x19, 0xd3, 0x57, 0x00, 0xd5, 0xc7, 0x6c, 0x2d, 0x66, 0xb6, 0xe5, 0x8f, 0x31, 0x63, 0x2c,
	0x96, 0xcc, 0x1e, 0xc0, 0x7c, 0x9b, 0xb1, 0x4f, 0x89, 0x78, 0x33, 0x8c, 0x0d, 0x85, 0xb1, 0x8a,
	0x96, 0x2d, 0x86, 0xf3, 0x42, 0xa6, 0xe8, 0x25, 0x7a, 0x62, 0xde, 0xa7, 0x58, 0x78, 0x7c, 0x36,
	0x56, 0x7d, 0xa2, 0x72, 0x3a, 0xf2, 0x85, 0xc6, 0x3b, 0x0a, 0x76, 0x13, 0x6d, 0x8c, 0xc1, 0x3a,
	0xdc, 0x00, 0x7e, 0xa9, 0x4e, 0x7b, 0x9f, 0x84, 0xe4, 0x8a, 0xd3, 0xce, 0x42, 0x37, 0xa4, 0xf7,
	0x27, 0x48, 0xbb, 0x50, 0x51, 0x0d, 0xcb, 0x44, 0x71, 0x7b, 0xb2, 0xb9, 0x64, 0x9f, 0x99, 0x66,
	0xbe, 0xcb, 0x61, 0xa4, 0x60, 0xab, 0x18, 0x24, 0xac, 0xee, 0x78, 0x7b, 0x05, 0x74, 0x1f, 0xaa,
	0xc6, 0x48, 0xd5, 0x17, 0xca, 0x1b, 0x35, 0xc7, 0x0b, 0x11, 0xaf, 0x2b, 0x94, 0x1a, 0xae, 0x4a,
	0x14, 0x5b, 0x94, 0xe8, 0x18, 0x16, 0x95, 0xbe, 0x4c, 0x4c, 0x63, 0xec, 0xb8, 0x0f, 0x67, 0x11,
	0xca, 0x25, 0x47, 0x13, 0x72, 0x5e, 0x04, 0xfe, 0x4b, 0xf4, 0x95, 0x39, 0xa7, 0x89, 0xdf, 0x6c,
	0xc0, 0x37, 0x8a, 0x60, 0x16, 0xf9, 0x09, 0x94, 0xd3, 0xd7, 0x61, 0x66, 0x5e, 0xfe, 0x9b, 0xdd,
	0x9f, 0x78, 0x4c, 0xf0, 0xa6, 0x02, 0x5f, 0x43, 0xab, 0x59, 0x70, 0x9d, 0x20, 0xdf, 0xc2, 0xd3,
	0x5e, 0x8c, 0xb6, 0x26, 0x61, 0xd2, 0x77, 0xb9, 0x79, 0x63, 0xfa, 0x47, 0xe3, 0xe2, 0x86, 0x72,
	0x51, 0x47, 0xeb, 0x63, 0xfc, 0x9d, 0x50, 0x02, 0x9f, 0x42, 0xad, 0x13, 0x0d, 0x03, 0x4e, 0xa3,
	0x01, 0x89, 0xc4, 0x55, 0x77, 0x61, 0xd5, 0x06, 0xbc, 0x13, 0x0d, 0x8f, 0x68, 0x74, 0x1e, 0xf4,
	0x70, 0x5d, 0x41, 0xaf, 0xa0, 0x9a, 0x84, 0x26, 0xd1, 0xd0, 0x52, 0xff, 0x26, 0x07, 0x7a, 0x4a,
	0x04, 0xda, 0xcc, 0x82, 0xe6, 0x1e, 0xf5, 0x99, 0x71, 0x37, 0xe0, 0x78, 0x1c, 0xbc, 0x0b, 0x95,
	0x4c, 0xdf, 0x9b, 0x49, 0x77, 0x27, 0xbb, 0x3f, 0xa5, 0x51, 0xe2, 0x2d, 0x85, 0x7f, 0x1d, 0xad,
	0x65, 0x8b, 0xcf, 0x3a, 0x39, 0x83, 0x25, 0x63, 0xf3, 0xd6, 0x75, 0x63, 0xee, 0xf5, 0xfe, 0x46,
	0x1e, 0xdf, 0x63, 0xec, 0xa5, 0xae, 0x9f, 0x67, 0x50, 0xcd, 0x4e, 0x29, 0xb3, 0xbb, 0xe3, 0x6e,
	0xfe, 0x28, 0x93, 0x83, 0x0d, 0xbe, 0xae, 0x7c, 0x2d, 0xa3, 0x25, 0xed, 0xcb, 0xcc, 0x2f, 0xe8,
	0xb1, 0x0c, 0x95, 0x16, 0xae, 0xca, 0xec, 0xc4, 0x0c, 0x94, 0xaf, 0x99, 0x14, 0xcf, 0x06, 0xe7,
	0x5b, 0xa8, 0x59, 0x4d, 0xd3, 0x3d, 0x6e, 0xfe, 0xe3, 0x68, 0x32, 0xc5, 0x89, 0x21, 0x8d, 0xc7,
	0x48, 0x7f, 0x37, 0x42, 0x7f, 0xcb, 0x9e, 0x67, 0xd8, 0xef, 0x4f, 0x67, 0x4f, 0xb2, 0x61, 0x8f,
	0xfa, 0xa8, 0x39, 0x81, 0x9e, 0x12, 0x9f, 0x42, 0xfa, 0x96, 0xc2, 0xbe, 0xd9, 0xdc, 0x99, 0x86,
	0xed, 0x84, 0x41, 0xd4, 0xd7, 0x29, 0x46, 0xc1, 0xe8, 0x18, 0x8f, 0xa3, 0xf0, 0xdf, 0x3b, 0xba,
	0xad, 0x1c, 0xfd, 0xaf, 0x79, 0x73, 0xaa, 0xa3, 0x24, 0xca, 0xb8, 0x7a, 0x04, 0x0b, 0x66, 0xdc,
	0xca, 0x87, 0x6a, 0x34, 0x83, 0x35, 0x73, 0xb5, 0x95, 0x99, 0xbc, 0xec, 0xc3, 0x88, 0x2a, 0xd2,
	0x4d, 0xdf, 0xa0, 0x3c, 0x03, 0x18, 0x4d, 0x26, 0xf9, 0xbb, 0x9b, 0x9b, 0x58, 0x66, 0xc3, 0x6e,
	0x2b, 0xd8, 0x06, 0xaa, 0x4b, 0x58, 0xa6, 0x6d, 0xd2, 0x77, 0x2d, 0x89, 0xd0, 0x53, 0x28, 0xa7,
	0x43, 0x52, 0xfe, 0x6e, 0x65, 0x07, 0xb5, 0x7c, 0xf7, 0x9c, 0x98, 0xaa, 0xf2, 0x4d, 0x5f, 0xb6,
	0x33, 0xe3, 0xe2, 0x6e, 0xe1, 0xb0, 0xf1, 0xea, 0xf5, 0x76, 0xe1, 0xd7, 0xd7, 0xdb, 0x85, 0x3f,
	0x5f, 0x6f, 0x17, 0xbe, 0xce, 0xfc, 0x46, 0x9f, 0xcd, 0xab, 0x6a, 0x79, 0xef, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x8b, 0x82, 0x28, 0x46, 0x6b, 0x0f, 0x00, 0x00,
}
