// Code generated by protoc-gen-go.
// source: stack.proto
// DO NOT EDIT!

/*
Package models is a generated protocol buffer package.

It is generated from these files:
	stack.proto

It has these top-level messages:
	Stack
	App
	Build
	Release
	Resource
	ResourceVar
	CreateStackRequest
*/
package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_CREATED Status = 0
)

var Status_name = map[int32]string{
	0: "CREATED",
}
var Status_value = map[string]int32{
	"CREATED": 0,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResourceType int32

const (
	ResourceType_MYSQL    ResourceType = 0
	ResourceType_POSTGRES ResourceType = 1
)

var ResourceType_name = map[int32]string{
	0: "MYSQL",
	1: "POSTGRES",
}
var ResourceType_value = map[string]int32{
	"MYSQL":    0,
	"POSTGRES": 1,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Stack struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Bucket        string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Zone          string `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	ProjectId     string `protobuf:"bytes,4,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	ProjectNumber int64  `protobuf:"varint,5,opt,name=project_number,json=projectNumber" json:"project_number,omitempty"`
	ServiceKey    []byte `protobuf:"bytes,6,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
}

func (m *Stack) Reset()                    { *m = Stack{} }
func (m *Stack) String() string            { return proto.CompactTextString(m) }
func (*Stack) ProtoMessage()               {}
func (*Stack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Stack) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Stack) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Stack) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Stack) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Stack) GetProjectNumber() int64 {
	if m != nil {
		return m.ProjectNumber
	}
	return 0
}

func (m *Stack) GetServiceKey() []byte {
	if m != nil {
		return m.ServiceKey
	}
	return nil
}

type App struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Status    Status `protobuf:"varint,2,opt,name=status,enum=models.Status" json:"status,omitempty"`
	ReleaseId string `protobuf:"bytes,3,opt,name=release_id,json=releaseId" json:"release_id,omitempty"`
	Endpoint  string `protobuf:"bytes,4,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_CREATED
}

func (m *App) GetReleaseId() string {
	if m != nil {
		return m.ReleaseId
	}
	return ""
}

func (m *App) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type Build struct {
	Id        string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	App       string                      `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	RemoteId  string                      `protobuf:"bytes,3,opt,name=remote_id,json=remoteId" json:"remote_id,omitempty"`
	Status    Status                      `protobuf:"varint,4,opt,name=status,enum=models.Status" json:"status,omitempty"`
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Build) Reset()                    { *m = Build{} }
func (m *Build) String() string            { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()               {}
func (*Build) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Build) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Build) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Build) GetRemoteId() string {
	if m != nil {
		return m.RemoteId
	}
	return ""
}

func (m *Build) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_CREATED
}

func (m *Build) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Release struct {
	Id        string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	App       string                      `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	BuildId   string                      `protobuf:"bytes,3,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
	Status    Status                      `protobuf:"varint,4,opt,name=status,enum=models.Status" json:"status,omitempty"`
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Release) Reset()                    { *m = Release{} }
func (m *Release) String() string            { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()               {}
func (*Release) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Release) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Release) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Release) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *Release) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_CREATED
}

func (m *Release) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Resource struct {
	Name       string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Status     Status            `protobuf:"varint,2,opt,name=status,enum=models.Status" json:"status,omitempty"`
	Kind       ResourceType      `protobuf:"varint,3,opt,name=kind,enum=models.ResourceType" json:"kind,omitempty"`
	URL        string            `protobuf:"bytes,4,opt,name=URL" json:"URL,omitempty"`
	Apps       []string          `protobuf:"bytes,5,rep,name=apps" json:"apps,omitempty"`
	Exports    []*ResourceVar    `protobuf:"bytes,6,rep,name=exports" json:"exports,omitempty"`
	Parameters map[string]string `protobuf:"bytes,7,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_CREATED
}

func (m *Resource) GetKind() ResourceType {
	if m != nil {
		return m.Kind
	}
	return ResourceType_MYSQL
}

func (m *Resource) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Resource) GetApps() []string {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *Resource) GetExports() []*ResourceVar {
	if m != nil {
		return m.Exports
	}
	return nil
}

func (m *Resource) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ResourceVar struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ResourceVar) Reset()                    { *m = ResourceVar{} }
func (m *ResourceVar) String() string            { return proto.CompactTextString(m) }
func (*ResourceVar) ProtoMessage()               {}
func (*ResourceVar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResourceVar) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResourceVar) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CreateStackRequest struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ProjectId     string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Zone          string `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	ProjectNumber int64  `protobuf:"varint,4,opt,name=project_number,json=projectNumber" json:"project_number,omitempty"`
	Bucket        string `protobuf:"bytes,5,opt,name=bucket" json:"bucket,omitempty"`
	ServiceKey    []byte `protobuf:"bytes,6,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
}

func (m *CreateStackRequest) Reset()                    { *m = CreateStackRequest{} }
func (m *CreateStackRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateStackRequest) ProtoMessage()               {}
func (*CreateStackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateStackRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateStackRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *CreateStackRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *CreateStackRequest) GetProjectNumber() int64 {
	if m != nil {
		return m.ProjectNumber
	}
	return 0
}

func (m *CreateStackRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *CreateStackRequest) GetServiceKey() []byte {
	if m != nil {
		return m.ServiceKey
	}
	return nil
}

func init() {
	proto.RegisterType((*Stack)(nil), "models.Stack")
	proto.RegisterType((*App)(nil), "models.App")
	proto.RegisterType((*Build)(nil), "models.Build")
	proto.RegisterType((*Release)(nil), "models.Release")
	proto.RegisterType((*Resource)(nil), "models.Resource")
	proto.RegisterType((*ResourceVar)(nil), "models.ResourceVar")
	proto.RegisterType((*CreateStackRequest)(nil), "models.CreateStackRequest")
	proto.RegisterEnum("models.Status", Status_name, Status_value)
	proto.RegisterEnum("models.ResourceType", ResourceType_name, ResourceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StackService service

type StackServiceClient interface {
	Create(ctx context.Context, in *CreateStackRequest, opts ...grpc.CallOption) (*Stack, error)
}

type stackServiceClient struct {
	cc *grpc.ClientConn
}

func NewStackServiceClient(cc *grpc.ClientConn) StackServiceClient {
	return &stackServiceClient{cc}
}

func (c *stackServiceClient) Create(ctx context.Context, in *CreateStackRequest, opts ...grpc.CallOption) (*Stack, error) {
	out := new(Stack)
	err := grpc.Invoke(ctx, "/models.StackService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StackService service

type StackServiceServer interface {
	Create(context.Context, *CreateStackRequest) (*Stack, error)
}

func RegisterStackServiceServer(s *grpc.Server, srv StackServiceServer) {
	s.RegisterService(&_StackService_serviceDesc, srv)
}

func _StackService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.StackService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackServiceServer).Create(ctx, req.(*CreateStackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.StackService",
	HandlerType: (*StackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _StackService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stack.proto",
}

func init() { proto.RegisterFile("stack.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 880 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xef, 0x6e, 0xe3, 0x44,
	0x10, 0x3f, 0xc7, 0xcd, 0xbf, 0x49, 0x2e, 0x17, 0xed, 0xe5, 0x7a, 0x26, 0x40, 0x1d, 0xad, 0x74,
	0x22, 0xaa, 0x84, 0x23, 0x72, 0x80, 0xa0, 0x82, 0x13, 0xcd, 0x11, 0x50, 0x45, 0x81, 0x63, 0xd3,
	0x22, 0xdd, 0xa7, 0x6a, 0x13, 0x2f, 0xc1, 0x24, 0xb1, 0x8d, 0xbd, 0xae, 0x28, 0x1f, 0x79, 0x05,
	0x5e, 0x00, 0x9e, 0x83, 0x17, 0x40, 0x42, 0x42, 0x48, 0x7c, 0xb7, 0x4e, 0x15, 0x4f, 0xe0, 0x27,
	0x40, 0xbb, 0x5e, 0x37, 0x7b, 0x49, 0x3e, 0x00, 0x42, 0x88, 0x6f, 0x3b, 0x99, 0xdf, 0x6f, 0xbc,
	0xf3, 0x9b, 0x99, 0x9d, 0x40, 0x23, 0xe6, 0x74, 0xb6, 0x70, 0xc2, 0x28, 0xe0, 0x01, 0xaa, 0xac,
	0x02, 0x97, 0x2d, 0xe3, 0xee, 0x4b, 0xf3, 0x20, 0x98, 0x2f, 0xd9, 0x80, 0x86, 0xde, 0x80, 0xfa,
	0x7e, 0xc0, 0x29, 0xf7, 0x02, 0x3f, 0xce, 0x51, 0x5d, 0x5b, 0x79, 0xa5, 0x35, 0x4d, 0xbe, 0x18,
	0x70, 0x6f, 0xc5, 0x62, 0x4e, 0x57, 0xa1, 0x02, 0xbc, 0x3a, 0xf7, 0xf8, 0x97, 0xc9, 0xd4, 0x99,
	0x05, 0xab, 0xc1, 0x3c, 0x98, 0x07, 0x6b, 0xa4, 0xb0, 0xa4, 0x21, 0x4f, 0x39, 0x1c, 0xff, 0x52,
	0x82, 0xf2, 0x44, 0xdc, 0x02, 0xf5, 0x61, 0xcf, 0xa7, 0x2b, 0x66, 0x19, 0x3d, 0xa3, 0x5f, 0x1f,
	0x75, 0xb2, 0xd4, 0x6e, 0xbb, 0x94, 0xd3, 0x98, 0x07, 0x11, 0x3b, 0xc2, 0xc2, 0x85, 0x89, 0x44,
	0x20, 0x07, 0x2a, 0xd3, 0x64, 0xb6, 0x60, 0xdc, 0x2a, 0x49, 0xec, 0x7e, 0x96, 0xda, 0x48, 0xc3,
	0xe6, 0x4e, 0x4c, 0x14, 0x4a, 0x44, 0xfe, 0x36, 0xf0, 0x99, 0x65, 0xee, 0x8c, 0x2c, 0x5c, 0x98,
	0x48, 0x04, 0x7a, 0x1b, 0x20, 0x8c, 0x82, 0xaf, 0xd8, 0x8c, 0x5f, 0x78, 0xae, 0xb5, 0x27, 0xf1,
	0xdd, 0x2c, 0xb5, 0xf7, 0x35, 0xfc, 0x1a, 0x80, 0x49, 0x5d, 0x19, 0x27, 0x2e, 0x1a, 0x43, 0xab,
	0xf0, 0xf8, 0xc9, 0x6a, 0xca, 0x22, 0xab, 0xdc, 0x33, 0xfa, 0xe6, 0xe8, 0x20, 0x4b, 0xed, 0xee,
	0x0e, 0x7a, 0x0e, 0xc2, 0xe4, 0xb6, 0xfa, 0xe1, 0x13, 0x69, 0xa3, 0x77, 0xa0, 0x11, 0xb3, 0xe8,
	0xd2, 0x9b, 0xb1, 0x8b, 0x05, 0xbb, 0xb2, 0x2a, 0x3d, 0xa3, 0xdf, 0x1c, 0xbd, 0x98, 0xa5, 0xf6,
	0x7d, 0x2d, 0x86, 0x86, 0xc0, 0x04, 0x94, 0xf5, 0x11, 0xbb, 0xc2, 0xcf, 0x0c, 0x30, 0x8f, 0xc3,
	0xf0, 0x6f, 0x68, 0xf9, 0x08, 0x2a, 0x31, 0xa7, 0x3c, 0x89, 0xa5, 0x96, 0xad, 0x61, 0xcb, 0xc9,
	0xdb, 0xc0, 0x99, 0xc8, 0x5f, 0xb7, 0xb4, 0xcd, 0xc1, 0x98, 0x28, 0x96, 0x50, 0x2c, 0x62, 0x4b,
	0x46, 0x63, 0x26, 0x14, 0x33, 0x77, 0x2a, 0xb6, 0x06, 0x60, 0x52, 0x57, 0xc6, 0x89, 0x8b, 0x5e,
	0x87, 0x1a, 0xf3, 0xdd, 0x30, 0xf0, 0x7c, 0xae, 0xa4, 0xb6, 0xb2, 0xd4, 0xee, 0x68, 0xc4, 0xc2,
	0x8d, 0xc9, 0x0d, 0x12, 0xff, 0x58, 0x82, 0xf2, 0x28, 0xf1, 0x96, 0x2e, 0xc2, 0x50, 0xf2, 0x5c,
	0x95, 0x22, 0xca, 0x52, 0xbb, 0xa5, 0x31, 0xc5, 0xa7, 0x4a, 0x9e, 0x8b, 0x1e, 0x80, 0x49, 0xc3,
	0x50, 0xf5, 0xc9, 0xdd, 0x2c, 0xb5, 0xef, 0x68, 0x20, 0x1a, 0x86, 0x98, 0x08, 0x3f, 0x7a, 0x13,
	0xea, 0x11, 0x5b, 0x05, 0x5c, 0x4b, 0xe2, 0x85, 0x2c, 0xb5, 0xef, 0x3d, 0x97, 0x84, 0xf2, 0x63,
	0x52, 0xcb, 0xcf, 0x27, 0xae, 0xa6, 0xde, 0xde, 0x3f, 0x52, 0xef, 0x1c, 0x60, 0x16, 0x31, 0xca,
	0x99, 0x7b, 0x41, 0xb9, 0x6c, 0x98, 0xc6, 0xb0, 0xeb, 0xe4, 0x23, 0xe6, 0x14, 0x83, 0xe3, 0x9c,
	0x15, 0x23, 0xb6, 0xa5, 0xec, 0x9a, 0x8c, 0x49, 0x5d, 0x19, 0xc7, 0x1c, 0xff, 0x50, 0x82, 0x2a,
	0xc9, 0x75, 0xfe, 0x37, 0x55, 0x7a, 0x08, 0xb5, 0xa9, 0x50, 0x7e, 0x2d, 0xd2, 0x66, 0xc1, 0x0a,
	0x37, 0x26, 0x55, 0x79, 0xfc, 0xff, 0x4a, 0xf4, 0xab, 0x09, 0x35, 0xc2, 0xe2, 0x20, 0x89, 0x66,
	0xec, 0x3f, 0x1c, 0x97, 0x47, 0xb0, 0xb7, 0xf0, 0xfc, 0x5c, 0xbe, 0xd6, 0xb0, 0x53, 0xb0, 0x23,
	0x75, 0x93, 0xb3, 0xab, 0x90, 0x6d, 0x7d, 0x5f, 0x10, 0x30, 0x91, 0x3c, 0x51, 0xa9, 0x73, 0x72,
	0xaa, 0xc6, 0x65, 0xb3, 0x52, 0xe7, 0xe4, 0x14, 0x13, 0xe1, 0x17, 0x09, 0xd1, 0x30, 0x8c, 0xad,
	0x72, 0xcf, 0xdc, 0x91, 0x90, 0x70, 0x61, 0x22, 0x11, 0xe8, 0x03, 0xa8, 0xb2, 0x6f, 0xc2, 0x20,
	0xe2, 0xb1, 0x55, 0xe9, 0x99, 0xfd, 0xc6, 0xf0, 0x6e, 0x71, 0xa7, 0x42, 0x9d, 0xcf, 0x69, 0x34,
	0xba, 0x9f, 0xa5, 0xf6, 0x5d, 0x7d, 0x30, 0x73, 0x0a, 0x26, 0x05, 0x19, 0xbd, 0x07, 0x10, 0xd2,
	0x88, 0xae, 0x18, 0x67, 0x51, 0x6c, 0x55, 0x65, 0xa8, 0xde, 0x66, 0x28, 0xe7, 0xc9, 0x0d, 0x64,
	0xec, 0xf3, 0xe8, 0x8a, 0x68, 0x9c, 0xee, 0xbb, 0x70, 0x67, 0xc3, 0x8d, 0xda, 0x60, 0x8a, 0x47,
	0x50, 0x96, 0x85, 0x88, 0x23, 0xea, 0x40, 0xf9, 0x92, 0x2e, 0x13, 0x96, 0xf7, 0x2a, 0xc9, 0x8d,
	0xa3, 0xd2, 0x5b, 0x06, 0x7e, 0x03, 0x1a, 0xda, 0x8d, 0xff, 0x2a, 0x15, 0xff, 0x64, 0x00, 0x7a,
	0x2c, 0xbb, 0x42, 0x6e, 0x21, 0xc2, 0xbe, 0x4e, 0x58, 0xcc, 0x11, 0xd2, 0x3b, 0x42, 0xd5, 0xfe,
	0xe5, 0xe7, 0x96, 0x43, 0x1e, 0x45, 0x5b, 0x00, 0x48, 0xdf, 0x32, 0x6a, 0x9f, 0x3c, 0xd8, 0x5a,
	0x0a, 0xa2, 0x72, 0xe6, 0xe6, 0xa3, 0xbf, 0x7f, 0xb3, 0xd0, 0xca, 0x92, 0x5c, 0x2c, 0x2e, 0x7b,
	0xc7, 0x32, 0xd0, 0xdf, 0xfb, 0xc3, 0x7b, 0x50, 0xc9, 0x1b, 0x0f, 0x35, 0xa0, 0xfa, 0x98, 0x8c,
	0x8f, 0xcf, 0xc6, 0xef, 0xb7, 0x6f, 0x1d, 0xbe, 0x02, 0x4d, 0xbd, 0xa3, 0x50, 0x1d, 0xca, 0x1f,
	0x3f, 0x9d, 0x7c, 0x76, 0xda, 0xbe, 0x85, 0x9a, 0x50, 0x7b, 0xf2, 0xe9, 0xe4, 0xec, 0x43, 0x32,
	0x9e, 0xb4, 0x8d, 0xe1, 0x53, 0x68, 0xca, 0xb4, 0x27, 0x79, 0x48, 0x74, 0x02, 0x95, 0x5c, 0x0c,
	0xd4, 0x2d, 0x6a, 0xb7, 0x2d, 0x4e, 0xf7, 0xb6, 0xd6, 0xf4, 0xb3, 0x05, 0xee, 0x7c, 0xf7, 0xfb,
	0x1f, 0xdf, 0x97, 0x5a, 0xb8, 0x3e, 0xb8, 0x7c, 0x6d, 0x20, 0xff, 0x51, 0x1c, 0x19, 0x87, 0xa3,
	0xe6, 0xcf, 0xd7, 0x07, 0xc6, 0x6f, 0xd7, 0x07, 0xc6, 0xb3, 0xeb, 0x03, 0x63, 0x5a, 0x91, 0x93,
	0xfa, 0xf0, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0x86, 0x4b, 0x72, 0x72, 0x08, 0x00, 0x00,
}
